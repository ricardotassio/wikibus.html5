/*
 * File: app/view/ToolbarMapa.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Ubibus.view.ToolbarMapa', {
    extend: 'Ext.Toolbar',
    alias: 'widget.toolbarmapa',

    config: {
        docked: 'top',
        hidden: true,
        id: 'toolbarPonto',
        ui: 'outro',
        title: '',
        layout: {
            align: 'center',
            pack: 'center',
            type: 'hbox'
        },
        items: [
            {
                xtype: 'segmentedbutton',
                id: 'opcoesCentralizaMapa',
                itemId: 'mysegmentedbutton6',
                allowDepress: true,
                pressedCls: 'x-button-unpressed',
                layout: {
                    align: 'center',
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        id: 'btnCentralizaMapa',
                        ui: 'action',
                        iconCls: 'locate',
                        iconMask: true
                    }
                ]
            },
            {
                xtype: 'spacer',
                width: 5
            },
            {
                xtype: 'segmentedbutton',
                id: 'opcoesAdicionarPontos',
                itemId: 'mysegmentedbutton5',
                allowDepress: true,
                layout: {
                    align: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        pressed: true,
                        id: 'btnExibePontos',
                        ui: 'action',
                        iconCls: 'download',
                        iconMask: true
                    },
                    {
                        xtype: 'button',
                        hidden: true,
                        id: 'btnExibePontosHidden',
                        text: 'MyButton39'
                    }
                ]
            },
            {
                xtype: 'spacer',
                width: 5
            },
            {
                xtype: 'segmentedbutton',
                id: 'opcoesMapaPonto',
                itemId: 'mysegmentedbutton3',
                allowDepress: true,
                items: [
                    {
                        xtype: 'button',
                        id: 'btnAtivaAdicao',
                        ui: 'action',
                        iconCls: 'add',
                        iconMask: true
                    }
                ]
            },
            {
                xtype: 'button',
                id: 'btnBuscaPontos',
                itemId: 'mybutton11',
                ui: 'action',
                iconCls: 'search',
                iconMask: true
            },
            {
                xtype: 'spacer',
                width: 5
            },
            {
                xtype: 'segmentedbutton',
                hidden: true,
                id: 'opcoesMapaLinha',
                itemId: 'mysegmentedbutton2',
                layout: {
                    align: 'center',
                    pack: 'center',
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'button',
                        id: 'btnRota',
                        ui: 'confirm',
                        badgeText: 'Iniciar',
                        iconCls: 'maps',
                        iconMask: true,
                        text: 'Rotaaa'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'centralizaMapa',
                event: 'toggle',
                delegate: '#opcoesCentralizaMapa'
            },
            {
                fn: 'onMysegmentedbutton5Toggle',
                event: 'toggle',
                delegate: '#opcoesAdicionarPontos'
            },
            {
                fn: 'onOpcoesMapaPontoToggle',
                event: 'toggle',
                delegate: '#opcoesMapaPonto'
            },
            {
                fn: 'onBtnBuscaPontosTap',
                event: 'tap',
                delegate: '#btnBuscaPontos'
            },
            {
                fn: 'onOpcoesMapaLinhaToggle',
                event: 'toggle',
                delegate: '#opcoesMapaLinha'
            }
        ]
    },

    centralizaMapa: function(segmentedbutton, button, isPressed, eOpts) {
        //if(button.id == 'btnCentralizaMapa' && isPressed){
        navigator.geolocation.getCurrentPosition(function(position) {
            var pos = new google.maps.LatLng(position.coords.latitude,
                position.coords.longitude);
            latLng = pos;

            //Centraliza mapa
            MAPA.setCenter(pos);

        });
        //}
    },

    onMysegmentedbutton5Toggle: function(segmentedbutton, button, isPressed, eOpts) {
        // função para mostrar e esconder os pontos do mapa
        for (var i = 0; i < ids.length; i++) {
            if (isPressed) {
                markers[ids[i]].setMap(MAPA)
            } else {
                markers[ids[i]].setMap(null)
            }
        }


        switch(telaAtual){
            case 'ponto':
            break;
            case 'linha':

            for (var i = 0; i < idsLinhas.length; i++) {
                markers[idsLinhas[i]].setMap(MAPA);            
            }

            break;
        }

    },

    onOpcoesMapaPontoToggle: function(segmentedbutton, button, isPressed, eOpts) {
        if(button.id == 'btnBuscaPontos' && isPressed){
            //Exibe promp de confirmação
            Ext.Msg.prompt(null, 
            'Informe um local:',
            function(btn, text){
                if(btn == 'ok'){
                    geocoder = new google.maps.Geocoder();

                    var address = text;

                    geocoder.geocode( { 'address': address}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        MAPA.setCenter(results[0].geometry.location);
                        MAPA.setZoom(16);

                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });

            }
        },
        this, false, '', {placeHolder: 'Ex: Brotas, Salvador, BA'});
    }
    },

    onBtnBuscaPontosTap: function(button, e, eOpts) {
        //Exibe promp de confirmação
        Ext.Msg.prompt(null, 
        'Informe um local:',
        function(btn, text){
            if(btn == 'ok'){
                geocoder = new google.maps.Geocoder();

                var address = text;

                geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    MAPA.setCenter(results[0].geometry.location);
                    MAPA.setZoom(16);

                } else {
                    //alert('Geocode was not successful for the following reason: ' + status);
                    Ext.Msg.alert('Desculpa:', 'Não foi possível achar o endereço solicitado!', Ext.emptyFn);
                }
            });

        }
    },
    this, false, '', {placeHolder: 'Ex: Brotas, Salvador, BA'});
    },

    onOpcoesMapaLinhaToggle: function(segmentedbutton, button, isPressed, eOpts) {
        if(isPressed){
            Ext.getCmp(button.setBadgeText('Parar'));
            contadorLinha = 0;
            idPontoAnterior = 0;
        }
        else{
            Ext.getCmp(button.setBadgeText('Iniciar'));
        }
    }

});